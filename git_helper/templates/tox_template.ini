# This file is managed by `git_helper`. Don't edit it directly

# This file must be in the same dir as setup.py
[tox]
envlist = {% for version in tox_py_versions %}{{ version }}, {% endfor %} mypy
skip_missing_interpreters = True
requires = pip >= 19.0.0{% for requirement in tox_requirements %}
           {{ requirement }}{% endfor %}


[travis]
python =
{% for py_ver, tox_py_ver in tox_travis_versions.items() %}    {{ py_ver }}: {{ tox_py_ver }}{{ '\n' }}{% endfor %}

[gh-actions]
python =
{% for py_ver, tox_py_ver in gh_actions_versions.items() %}    {{ py_ver }}: {{ tox_py_ver }}{{ '\n' }}{% endfor %}

[build-system]
requires = [
           setuptools >= 46.1.3
           wheel >= 0.34.2{% for requirement in tox_build_requirements %}
           {{ requirement }}{% endfor %}
           ]
build-backend = "setuptools"


[testenv]
# Install test requirements
{% if enable_tests %}deps = -r{toxinidir}/{{ tests_dir }}/requirements.txt{% endif %}
{% if tox_testenv_extras %}extras = {{ tox_testenv_extras }}{% endif %}
commands =
    python --version
{% if enable_tests %};   Run tests
    python -m pytest --cov={{ import_name }} --reruns 1 --reruns-delay 30 -r aR {{ tests_dir }}/{% endif %}

{% if enable_docs %}
[testenv:docs]
basepython = python3.8
changedir = {toxinidir}/{{docs_dir}}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/{{docs_dir}}/requirements.txt
commands = sphinx-build -M html . ./build {posargs}


{% endif %}
[testenv:bumpversion]
skip_install = true
deps = bump2version
commands = bumpversion --verbose {posargs}


[testenv:build]
skip_install = true
changedir = {toxinidir}
deps = setuptools >= 46.1.3
       pep517
       wheel >= 0.34.2{% for requirement in tox_build_requirements %}
       {{ requirement }}{% endfor %}
{#commands = python -m pep517.build --source --binary "{toxinidir}" #}
commands = python setup.py {posargs} sdist bdist_wheel


[testenv:lint]
basepython = python3.6
changedir = {toxinidir}
ignore_errors = true
skip_install = true
deps =
    autopep8 >=1.5.2
    flake8 >=3.8.2
    flake8-2020 >= 1.6.0
    flake8_strftime
    flake8-pytest-style
    flake8-docstrings
    flake8-rst-docstrings
    pygments
    git+https://github.com/domdfcoding/flake8-quotes.git
commands = flake8 {{ source_files }}


[testenv:yapf]
basepython = python3.7
changedir = {toxinidir}
skip_install = true
ignore_errors = true
deps = yapf
commands = yapf -i --recursive {{ source_files }}


[testenv:isort]
basepython = python3.6
skip_install = true
ignore_errors = true
changedir = {toxinidir}
deps = git+https://github.com/timothycrosley/isort.git@6ffdc23d95e27f8a3637a1b77c7049ed62222272
commands = isort {{ source_files }}


[testenv:mypy]
basepython = python3.6
{% if tox_testenv_extras %}extras = {{ tox_testenv_extras }}{% endif %}
ignore_errors = true
changedir = {toxinidir}
deps = mypy
commands = mypy {{ source_files }}


[testenv:pyup]
basepython = python3.6
{% if tox_testenv_extras %}extras = {{ tox_testenv_extras }}{% endif %}
ignore_errors = true
changedir={toxinidir}
deps = pyupgrade-directories
commands = pyup_dirs {{ source_files }} --py36-plus --recursive


[testenv:qa]
basepython = python3.6
skip_install = True
ignore_errors = true
whitelist_externals = tox
changedir = {toxinidir}
commands = tox -e pyup,isort,yapf,mypy,lint {posargs}


[flake8]
max-line-length = 120
select = {% for e in lint_fix_list + lint_warn_list + lint_belligerent_list + code_only_warning %}{{ e }} {% endfor %}
exclude = .git,__pycache__,{{docs_dir}},old,build,dist,make_conda_recipe.py,__pkginfo__.py,setup.py
rst-roles =
    class,
    func,
    mod,
    py:obj,
    py:class,
    ref,
    meth,
    exc,
    attr,
rst-directives =
    envvar,
    exception,
    seealso
per-file-ignores =
    {{ tests_dir }}/*: {% for e in code_only_warning %}{{ e }} {% endfor %}
pytest-parametrize-names-type = csv
inline-quotes = "
multiline-quotes = """
docstring-quotes = """
{# max-complexity = 13 #}



[mypy]
python_version = 3.6
ignore_missing_imports = True
namespace_packages = True
